import{execSync as e}from"child_process";import{dirSize as o,fileSize as r}from"./utils/size.js";import{allFolders as t}from"./utils/fs.js";import{mkdtempSync as s,readdirSync as c,rmSync as i}from"fs";import{extname as p,join as l}from"path";export const remote=(d,n)=>{let{tempDir:m,verbose:a}=n??{tempDir:"temp"},f=a?{stdio:"pipe"}:{stdio:"ignore"},g=s(m);process.chdir(g),e("npm init -y",f),e(`npm i ${d} --omit=dev`,f);let u=o("node_modules",[".package-lock.json"]),k=t("node_modules").filter(e=>c(e).includes("package.json"));for(let o=0;o<k.length;o++){let r=k[o];e(`cd ${r} && npm pack`,f)}let h=k.reduce((e,o)=>e+r(l(o,c(o).filter(e=>".tgz"===p(e))[0])),0);return process.chdir(".."),i(g,{recursive:!0,force:!0}),{tarGzipped:h,unpacked:u}};export const local=(s,d)=>{let{verbose:n}=d??{},m=n?{stdio:"pipe"}:{stdio:"ignore"};process.chdir(s),e("npm i --omit=dev",m),process.chdir("..");let a=o(s,[".package-lock.json","package-lock.json"]);process.chdir(s),e("npm pack",m);let f=t("node_modules").filter(e=>c(e).includes("package.json"));for(let o=0;o<f.length;o++){let r=f[o];e(`cd ${r} && npm pack`,m)}let g=f.reduce((e,o)=>e+r(l(o,c(o).filter(e=>".tgz"===p(e))[0])),0)+r(c("./").filter(e=>".tgz"===p(e))[0]);return i("node_modules",{recursive:!0,force:!0}),i(c("./").filter(e=>".tgz"===p(e))[0]),i("package-lock.json"),process.chdir(".."),{unpacked:a,tarGzipped:g}};